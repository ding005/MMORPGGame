// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace YouYou.DataTable
{

using global::System;
using global::FlatBuffers;

public struct Sys_Prefab : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Sys_Prefab GetRootAsSys_Prefab(ByteBuffer _bb) { return GetRootAsSys_Prefab(_bb, new Sys_Prefab()); }
  public static Sys_Prefab GetRootAsSys_Prefab(ByteBuffer _bb, Sys_Prefab obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Sys_Prefab __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span(6); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(6); }
  public int AssetCategory { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string AssetPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAssetPathBytes() { return __p.__vector_as_span(10); }
#else
  public ArraySegment<byte>? GetAssetPathBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetAssetPathArray() { return __p.__vector_as_array<byte>(10); }
  public sbyte PoolId { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public sbyte CullDespawned { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public int CullAbove { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CullDelay { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CullMaxPerPass { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Sys_Prefab> CreateSys_Prefab(FlatBufferBuilder builder,
      int Id = 0,
      StringOffset DescOffset = default(StringOffset),
      int AssetCategory = 0,
      StringOffset AssetPathOffset = default(StringOffset),
      sbyte PoolId = 0,
      sbyte CullDespawned = 0,
      int CullAbove = 0,
      int CullDelay = 0,
      int CullMaxPerPass = 0) {
    builder.StartObject(9);
    Sys_Prefab.AddCullMaxPerPass(builder, CullMaxPerPass);
    Sys_Prefab.AddCullDelay(builder, CullDelay);
    Sys_Prefab.AddCullAbove(builder, CullAbove);
    Sys_Prefab.AddAssetPath(builder, AssetPathOffset);
    Sys_Prefab.AddAssetCategory(builder, AssetCategory);
    Sys_Prefab.AddDesc(builder, DescOffset);
    Sys_Prefab.AddId(builder, Id);
    Sys_Prefab.AddCullDespawned(builder, CullDespawned);
    Sys_Prefab.AddPoolId(builder, PoolId);
    return Sys_Prefab.EndSys_Prefab(builder);
  }

  public static void StartSys_Prefab(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(1, DescOffset.Value, 0); }
  public static void AddAssetCategory(FlatBufferBuilder builder, int AssetCategory) { builder.AddInt(2, AssetCategory, 0); }
  public static void AddAssetPath(FlatBufferBuilder builder, StringOffset AssetPathOffset) { builder.AddOffset(3, AssetPathOffset.Value, 0); }
  public static void AddPoolId(FlatBufferBuilder builder, sbyte PoolId) { builder.AddSbyte(4, PoolId, 0); }
  public static void AddCullDespawned(FlatBufferBuilder builder, sbyte CullDespawned) { builder.AddSbyte(5, CullDespawned, 0); }
  public static void AddCullAbove(FlatBufferBuilder builder, int CullAbove) { builder.AddInt(6, CullAbove, 0); }
  public static void AddCullDelay(FlatBufferBuilder builder, int CullDelay) { builder.AddInt(7, CullDelay, 0); }
  public static void AddCullMaxPerPass(FlatBufferBuilder builder, int CullMaxPerPass) { builder.AddInt(8, CullMaxPerPass, 0); }
  public static Offset<Sys_Prefab> EndSys_Prefab(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Sys_Prefab>(o);
  }
};


}
